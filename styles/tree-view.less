@tree-view-height: @ui-line-height;

// background styling for left pane
atom-panel-container.left .panes {
  padding-top: 60px;
  background: darken(@tree-view-background-color, 10%);
  box-shadow:
    inset -1px 0 1px black,
    inset -3px 0 3px rgba(255,255,255,0.5);
}

// background for inner content of left pane
atom-panel-container.left atom-pane {
  margin: 10px;
  padding: 6px;
  background:
    radial-gradient(
      lighten(@ui-syntax-color,5%),
      darken(@ui-syntax-color, 5%)
    );
  border-radius: 7px;
  box-shadow:
    inset 0 0 4px rgba(0,0,0,0.25),
    inset 0 -6px rgba(255,255,255,0.25),
    inset 0 0 6px 6px @tree-view-background-color,
    inset 0 0 8px 2px rgba(0,0,0,0.95),
}

// Atom branding
atom-panel-container.left .panes::before {
  content: "ATOM Elevated v0.0.1";
  text-align: center;
  pointer-events: none;
  background: darken(@tree-view-background-color, 10%);
  color: rgba(0,0,0,0.5);
  box-shadow:
    inset 0 0 0px 5px rgba(0,0,0,0.5),
    0 0 4px rgba(0,0,0,0.5);
  position: absolute;
  top: 0;
  left: 0;
  width: calc(100%-7px);
  border: 5px solid transparent;
  border-radius: 7px;
  margin: 10px;
  padding: 10px;
  font-weight: 900;
}

.tool-panel.tree-view * {
  filter: saturate(90%) brightness(90%);
}

.tree-view {
  font-size: @ui-size;
  box-shadow: inset 0 0 20px rgba(0,0,0,0.25);
  background:
    radial-gradient(
      darken(@tree-view-background-color,30%),
      darken(@tree-view-background-color,50%)
  );

  .project-root.project-root {
    &:before {
      height: @ui-tab-height;
      background-clip: padding-box;
    }
    & > .header .name {
      line-height: @ui-tab-height;
    }
  }

  // Selected state
  .selected:before {
    background: @background-color-selected;
  }

  // Focus + selected state
  &:focus {
    .selected.list-item > .name, // files
    .selected.list-nested-item > .list-item > .name, // folders
    .selected.list-nested-item > .header:before { // arrow icon
      color: contrast(@button-background-color-selected);
    }
    .selected:before {
      background: @button-background-color-selected;
    }
  }
}

.theme-one-dark-ui .tree-view .project-root.project-root::before {
  border-top: 1px solid transparent;
  background-clip: padding-box;
}

.tree-view-resizer {
  .tree-view-resize-handle {
    width: 8px;
  }
}

// Variable height, based on ems
.list-group li:not(.list-nested-item),
.list-tree li:not(.list-nested-item),
.list-group li.list-nested-item > .list-item,
.list-tree li.list-nested-item > .list-item {
  line-height: @tree-view-height;
}

.list-group .selected::before,
.list-tree .selected::before {
  height: @tree-view-height;
}

// icon
.list-group .icon,
.list-tree .icon {
  display: inline-block;
  height: inherit;
  &::before {
    top: initial;
    line-height: inherit;
    height: inherit;
    vertical-align: top;
  }
}

// Arrow icon
.list-group,
.list-tree {
  .header.header.header.header::before {
    top: initial;
    line-height: inherit;
    height: inherit;
    vertical-align: top;
    font-size: inherit;
  }
}
.tree-view .project-root-header.project-root-header.project-root-header.project-root-header::before {
  line-height: @ui-tab-height;
}
